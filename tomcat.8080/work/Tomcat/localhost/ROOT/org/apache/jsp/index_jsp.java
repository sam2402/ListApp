/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.45
 * Generated at: 2021-05-23 20:14:45 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import uk.ac.ucl.model.List;
import java.util.ArrayList;
import uk.ac.ucl.model.ListItem;
import uk.ac.ucl.model.ListLinkItem;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("uk.ac.ucl.model.List");
    _jspx_imports_classes.add("java.util.ArrayList");
    _jspx_imports_classes.add("uk.ac.ucl.model.ListItem");
    _jspx_imports_classes.add("uk.ac.ucl.model.ListLinkItem");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("  ");
      org.apache.jasper.runtime.JspRuntimeLibrary.include(request, response, "/meta.jsp", out, false);
      out.write("\n");
      out.write("  <title>List App</title>\n");
      out.write("  <meta charset=\"utf-8\">\n");
      out.write("  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("<section>\n");
      out.write("  <div class=\"topLevel\" id=\"lists\">\n");
      out.write("    <h1>Lists</h1>\n");
      out.write("\n");
      out.write("    <div class=\"search\">\n");
      out.write("      <form method=\"POST\" action=\"/searchLists.html\">\n");
      out.write("        ");
 String searchListsText = (String) request.getSession().getAttribute("searchListsText");
        searchListsText = (searchListsText == null) ? "" : searchListsText;
        
      out.write("\n");
      out.write("        <input style=\"display: inline\" class=\"searchBox\" type=\"text\" name=\"searchString\" value=\"");
      out.print(searchListsText);
      out.write("\" placeholder=\"Search list names...\">\n");
      out.write("        <input style=\"display: inline\" type=\"submit\" value=\"Search\">\n");
      out.write("      </form>\n");
      out.write("      ");
 if (request.getSession().getAttribute("searchListsText")!=null) { 
      out.write("\n");
      out.write("      <form method=\"GET\" action=\"/searchLists.html\">\n");
      out.write("        <input type=\"submit\" value=\"Cancel Search\">\n");
      out.write("      </form>\n");
      out.write("      ");
}
      out.write("\n");
      out.write("      <hr>\n");
      out.write("    </div>\n");
      out.write("\n");
      out.write("    <div>\n");
      out.write("      <div id=\"ListThumbnails\">\n");
      out.write("        ");
 ArrayList<List> lists = (ArrayList<List>) request.getAttribute("lists");
        for (List list: lists) {
          String name = list.getName();
          String id = list.getId().toString();
        
      out.write("\n");
      out.write("          <h3 class=\"listThumbnailTitle \">");
      out.print(name);
      out.write("</h3>\n");
      out.write("          <form class=\"editList\" method=\"POST\" action=\"/deleteList.html\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(id);
      out.write("\" name=\"listId\">\n");
      out.write("            <input type=\"submit\" value=\"Delete\">\n");
      out.write("          </form>\n");
      out.write("          <form class=\"editList\" method=\"POST\" action=\"/renameList.html\">\n");
      out.write("            <input type=\"text\" placeholder=\"Change this list's name\" name=\"newName\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(id);
      out.write("\" name=\"listId\">\n");
      out.write("            <input type=\"submit\" value=\"Rename\">\n");
      out.write("          </form>\n");
      out.write("\n");
      out.write("          <form method=\"GET\" action=\"/viewList.html\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(id);
      out.write("\" name=\"listId\">\n");
      out.write("            <input type=\"submit\" value=\"View List\">\n");
      out.write("          </form>\n");
      out.write("          <hr>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("      </div>\n");
      out.write("\n");
      out.write("      <form method=\"POST\" action=\"/addList.html\">\n");
      out.write("        <input id=\"listNameTextBox\" type=\"text\" name=\"listNameString\" placeholder=\"New list name...\"/>\n");
      out.write("        <input type=\"submit\" value=\"Add\"/>\n");
      out.write("      </form>\n");
      out.write("    </div>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <div class = \"topLevel\" id=\"list\">\n");
      out.write("    ");
 List list = (List) request.getSession().getAttribute("currentList");
      if (list!=null) {
      String listId = list.getId().toString();
    
      out.write("\n");
      out.write("\n");
      out.write("      <h1>");
      out.print(list.getName());
      out.write("</h1>\n");
      out.write("\n");
      out.write("    <form method=\"POST\" action=\"/searchList.html\">\n");
      out.write("      ");
 String searchListText = (String) request.getSession().getAttribute("searchListText");
        searchListText = (searchListText == null) ? "" : searchListText;
      
      out.write("\n");
      out.write("      <input class=\"searchBox\" type=\"text\" name=\"searchString\" value=\"");
      out.print(searchListText);
      out.write("\" placeholder=\"Search items in ");
      out.print(list.getName());
      out.write("...\">\n");
      out.write("      <input type=\"submit\" value=\"Search\">\n");
      out.write("    </form>\n");
      out.write("    ");
 if (request.getSession().getAttribute("searchListText")!=null) { 
      out.write("\n");
      out.write("    <form method=\"GET\" action=\"/searchList.html\">\n");
      out.write("      <input type=\"submit\" value=\"Cancel Search\">\n");
      out.write("    </form>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("    <hr>\n");
      out.write("\n");
      out.write("\n");
      out.write("      <ul>\n");
      out.write("        ");
 for (ListItem listItem: list.getChildren()) {
          String itemId = listItem.getId().toString();
        
      out.write("\n");
      out.write("        <li class=\"listItem\">\n");
      out.write("          ");
      out.print(listItem.getHTMLRepresentation());
      out.write("\n");
      out.write("          <form method=\"POST\" action=\"/deleteItem.html\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(listId);
      out.write("\" name=\"listId\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(itemId);
      out.write("\" name=\"itemId\">\n");
      out.write("            <input type=\"submit\" value=\"Delete item\">\n");
      out.write("          </form>\n");
      out.write("          ");
 if (!(listItem instanceof ListLinkItem)) { 
      out.write("\n");
      out.write("          <form method=\"POST\" action=\"/editItem.html\">\n");
      out.write("            <input type=\"hidden\" value=\"");
      out.print(itemId);
      out.write("\" name=\"itemId\">\n");
      out.write("            <label for=\"editItem\">Edit Item</label>\n");
      out.write("              <input id=\"editItem\" type=\"text\" placeholder=\"Change this list's name\" value=\"");
      out.print(listItem.getText());
      out.write("\" name=\"newText\">\n");
      out.write("            <input type=\"submit\" value=\"Edit item\">\n");
      out.write("          </form>\n");
      out.write("          ");
}
      out.write("\n");
      out.write("          <hr>\n");
      out.write("        </li>\n");
      out.write("        ");
}
      out.write("\n");
      out.write("      </ul>\n");
      out.write("\n");
      out.write("\n");
      out.write("      <form id=\"itemTypeForm\" method=\"POST\" action=\"/addItem.html\">\n");
      out.write("        <label for=\"itemType\">\n");
      out.write("            <input type=\"text\" placeholder=\"Add item...\" name=\"text\">\n");
      out.write("        </label>\n");
      out.write("        <select name=\"itemType\" id=\"itemType\">\n");
      out.write("          <option value=\"text\">Text</option>\n");
      out.write("          <option value=\"imageURL\">Image URL</option>\n");
      out.write("          <option value=\"URL\">URL</option>\n");
      out.write("        </select>\n");
      out.write("        <input type=\"hidden\" value=\"");
      out.print(listId);
      out.write("\" name=\"listId\">\n");
      out.write("        <input type=\"submit\" value=\"Add item\">\n");
      out.write("      </form>\n");
      out.write("\n");
      out.write("      ");
 if (((ArrayList<List>) request.getAttribute("lists")).size() > 1) { 
      out.write("\n");
      out.write("      <form method=\"POST\" action=\"/addListLink.html\">\n");
      out.write("        <label>Add link to list</label>\n");
      out.write("        <select name=\"chosenListId\">\n");
      out.write("          ");
 for (List listOption: ((ArrayList<List>) request.getAttribute("lists"))) {
            String listOptionName = listOption.getName();
            String listOptionId = String.valueOf(listOption.getId());
            if (!listOptionId.equals(listId)) {
          
      out.write("\n");
      out.write("          <option value=\"");
      out.print(listOptionId);
      out.write('"');
      out.write('>');
      out.print(listOptionName);
      out.write("</option>\n");
      out.write("          ");
}
          }
      out.write("\n");
      out.write("        </select>\n");
      out.write("        <input type=\"hidden\" value=\"");
      out.print(listId);
      out.write("\" name=\"listId\">\n");
      out.write("        <input type=\"submit\" value=\"Add item\">\n");
      out.write("      </form>\n");
      out.write("    ");
}
      out.write("\n");
      out.write("\n");
      out.write("    ");
}
      out.write("\n");
      out.write("  </div>\n");
      out.write("</section>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
